trigger: none

pr: none

variables:
  - name: Codeql.SkipTaskAutoInjection
    value: true
  - name: skipComponentGovernanceDetection
    value: true
  - name: NPM_REGISTRY
    value: "https://pkgs.dev.azure.com/monacotools/Monaco/_packaging/vscode/npm/registry/"
  - name: CARGO_REGISTRY
    value: "none"
  - name: VSCODE_CIBUILD
    value: ${{ in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI') }}
  - name: VSCODE_QUALITY
    value: oss
  - name: VSCODE_STEP_ON_IT
    value: false
  - name: VSCODE_BUILD_AMD
    value: false

jobs:
  - ${{ if ne(variables['VSCODE_CIBUILD'], true) }}:
    - job: Compile
      displayName: Compile
      pool:
        name: 1es-ubuntu-22.04-x64
        os: linux
      timeoutInMinutes: 40000
      continueOnError: true
      variables:
        VSCODE_ARCH: x64
      steps:
        - task: NodeTool@0
          inputs:
            versionSource: fromFile
            versionFilePath: .nvmrc
            nodejsMirror: https://github.com/joaomoreno/node-mirror/releases/download

        - script: node build/setup-npm-registry.js $NPM_REGISTRY
          condition: and(succeeded(), ne(variables['NPM_REGISTRY'], 'none'))
          displayName: Setup NPM Registry

        - script: |
            set -e
            # Set the private NPM registry to the global npmrc file
            # so that authentication works for subfolders like build/, remote/, extensions/ etc
            # which does not have their own .npmrc file
            echo "NPMRC Path: $(npm config get userconfig)"
            echo "NPM Registry: $(npm config get registry)"
            npm config set registry "$NPM_REGISTRY"
            echo "##vso[task.setvariable variable=NPMRC_PATH]$(npm config get userconfig)"
          condition: and(succeeded(), ne(variables.NODE_MODULES_RESTORED, 'true'), ne(variables['NPM_REGISTRY'], 'none'))
          displayName: Setup NPM

        - task: npmAuthenticate@0
          inputs:
            workingFile: $(NPMRC_PATH)
          condition: and(succeeded(), ne(variables.NODE_MODULES_RESTORED, 'true'), ne(variables['NPM_REGISTRY'], 'none'))
          displayName: Setup NPM Authentication

        - script: sudo apt update -y && sudo apt install -y build-essential pkg-config libx11-dev libx11-xcb-dev libxkbfile-dev libnotify-bin libkrb5-dev
          displayName: Install build tools
          condition: and(succeeded(), ne(variables.NODE_MODULES_RESTORED, 'true'))

        - script: |
            set -e

            for i in {1..5}; do # try 5 times
              npm ci --ignore-scripts && break
              if [ $i -eq 5 ]; then
                echo "Npm install failed too many times" >&2
                exit 1
              fi
              echo "Npm install failed $i, trying again..."
            done
          env:
            ELECTRON_SKIP_BINARY_DOWNLOAD: 1
            PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
            GITHUB_TOKEN: "$(github-distro-mixin-password)"
          displayName: Install dependencies
          condition: and(succeeded(), ne(variables.NODE_MODULES_RESTORED, 'true'))

        - script: |
            set -e

            echo "Waiting for 1 hour before retrying..."
            sleep 3600 # wait for 1 hour
            npm ci --ignore-scripts
          env:
            ELECTRON_SKIP_BINARY_DOWNLOAD: 1
            PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
            GITHUB_TOKEN: "$(github-distro-mixin-password)"
          displayName: Retry npm install after failure
          condition: failed()
          retryCountOnTaskFailure: 5
